    static String longestPalindrome(String s) {
        int n = s.length();
        boolean dp[][] = new boolean[n][n];
        int maxlen = 1;     //保存最长回文子串长度
        int start = 0;      //保存最长回文子串起点
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j <= i; ++j) {
                if (i - j < 2) {
                    dp[j][i] = (s.charAt(i) == s.charAt(j));
                } else {
                    dp[j][i] = (s.charAt(i) == s.charAt(j) && dp[j + 1][i - 1]);
                }
                if (dp[j][i] && maxlen < i - j + 1) {
                    maxlen = i - j + 1;
                    start = j;
                }
            }
        }
        return s.substring(start, maxlen+start);
    }
